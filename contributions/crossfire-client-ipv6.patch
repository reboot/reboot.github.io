Index: configure.in
===================================================================
RCS file: /cvsroot/crossfire/client/configure.in,v
retrieving revision 1.55
diff -u -r1.55 configure.in
--- configure.in	6 Sep 2005 06:46:16 -0000	1.55
+++ configure.in	5 Feb 2006 15:07:44 -0000
@@ -381,7 +381,7 @@
 dnl Checks for library functions.
 AC_PROG_GCC_TRADITIONAL
 AC_FUNC_VPRINTF
-AC_CHECK_FUNCS(mkdir socket strcspn sysconf)
+AC_CHECK_FUNCS(mkdir socket strcspn sysconf getaddrinfo)
 
 AC_SUBST(XPM)
 AC_SUBST(SOUNDDIR)
Index: common/client.c
===================================================================
RCS file: /cvsroot/crossfire/client/common/client.c,v
retrieving revision 1.29
diff -u -r1.29 client.c
--- common/client.c	19 Jan 2006 17:17:37 -0000	1.29
+++ common/client.c	5 Feb 2006 15:07:44 -0000
@@ -182,9 +182,10 @@
 
 int init_connection(char *host, int port)
 {
-    struct protoent *protox;
-    int fd, oldbufsize, newbufsize=65535, buflen=sizeof(int);
+    int fd = -1, oldbufsize, newbufsize=65535, buflen=sizeof(int);
+#if !HAVE_GETADDRINFO || WIN32
     struct sockaddr_in insock;
+    struct protoent *protox;
 
     protox = getprotobyname("tcp");
     if (protox == (struct protoent  *) NULL)
@@ -210,10 +211,6 @@
 	    return -1;
 	}
 	memcpy(&insock.sin_addr, hostbn->h_addr, hostbn->h_length);
-    if (csocket.servername != NULL)
-        free(csocket.servername);
-    csocket.servername = malloc(sizeof(char)*(strlen(host)+1));
-    strcpy(csocket.servername, host);
     }
     if (connect(fd,(struct sockaddr *)&insock,sizeof(insock)) == (-1))
     {
@@ -221,6 +218,45 @@
 	    perror("Can't connect to server");
 	    return -1;
     }
+#else
+    struct addrinfo hints;
+    struct addrinfo *res = NULL, *ai;
+    char port_str[6];
+
+    snprintf(port_str, sizeof(port_str), "%d", port);
+
+    memset(&hints, 0, sizeof(hints));
+    hints.ai_family = AF_UNSPEC;
+    hints.ai_socktype = SOCK_STREAM;
+    hints.ai_protocol = IPPROTO_TCP;
+    
+    if (getaddrinfo(host, port_str, &hints, &res) != 0)
+	return -1;
+
+    for (ai = res; ai != NULL; ai = ai->ai_next) {
+	fd = socket(ai->ai_family, ai->ai_socktype, ai->ai_protocol);
+	if (fd == -1)
+	    continue;
+
+	if (connect(fd, ai->ai_addr, ai->ai_addrlen) != 0) {
+	    close(fd);
+	    fd = -1;
+	    continue;
+	}
+
+	break;
+    }
+
+    freeaddrinfo(res);
+    if (fd == -1)
+	return -1;
+#endif
+
+    if (csocket.servername != NULL)
+        free(csocket.servername);
+    csocket.servername = malloc(sizeof(char)*(strlen(host)+1));
+    strcpy(csocket.servername, host);
+
 #ifndef WIN32
     if (fcntl(fd, F_SETFL, O_NDELAY)==-1) {
 	LOG (LOG_ERROR,"common::init_connection","Error on fcntl.");
Index: common/config.h.in
===================================================================
RCS file: /cvsroot/crossfire/client/common/config.h.in,v
retrieving revision 1.4
diff -u -r1.4 config.h.in
--- common/config.h.in	22 Mar 2005 07:22:58 -0000	1.4
+++ common/config.h.in	5 Feb 2006 15:07:44 -0000
@@ -42,6 +42,9 @@
 /* Define if you have the sysconf function.  */
 #undef HAVE_SYSCONF
 
+/* Define if you have the getaddrinfo function.  */
+#undef HAVE_GETADDRINFO
+
 /* Define if you have the <X11/SM/SMlib.h> header file.  */
 #undef HAVE_X11_SM_SMLIB_H
 
